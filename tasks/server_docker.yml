---
- name: server | docker | pull docker image
  command: docker pull {{ devpi_docker_image }}
  register: docker_pull_result
  changed_when: docker_pull_result.stdout.find('newer') > -1

- name: server | docker | cat cidfile
  command: cat {{ devpi_cidfile }}
  ignore_errors: yes
  changed_when: False
  register: cat_result

- name: server | docker | inspect container
  command: docker inspect {{ cat_result.stdout.strip() }}
  register: inspect_result
  ignore_errors: yes
  changed_when: False
  when: cat_result.rc == 0

- name: server | docker | remove cidfile
  file: path={{ devpi_cidfile }} state=absent
  when: >
    cat_result.rc > 0  or
    (inspect_result.rc == 0 and inspect_result.stdout.find('"Running": false') > -1)

- name: server | docker | run container
  shell: >
    docker run -d
    -p {{ devpi_port }}:3141
    --cidfile={{ devpi_cidfile }}
    -e SERVICE_NAME={{ devpi_service_name }}
    -e SERVICE_TAGS={{ 'replica' if devpi_server_replica else 'master' }}
    -e SERVICE_CHECK_SCRIPT='/usr/bin/curl -sS -o /dev/null http://$(docker port $(cat {{ devpi_cidfile }}) 3141)'
    -e SERVICE_CHECK_INTERVAL=10s
    -e REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt
    -v {{ devpi_server_dir }}:/data
    -v /etc/ssl/certs:/etc/ssl/certs
    {{ devpi_docker_image }}
    {% if devpi_server_replica %}
    devpi-server --host 0.0.0.0 --port 3141 --restrict-modify root --serverdir /data
    --master {{ devpi_master_uri }}
    {% endif %}
  when: >
    cat_result.rc > 0 or
    (inspect_result.rc == 0 and inspect_result.stdout.find('"Running": false') > -1)
  register: docker_run_result

- name: server | docker | get container port
  shell: docker port $(cat {{ devpi_cidfile }})
  register: docker_port_result
  when: devpi_port == '' and docker_run_result.changed

- name: server | docker | set new port fact
  set_fact: { devpi_port: "{{ docker_port_result.stdout.split(':')[1] }}" }
  when: docker_port_result is defined and docker_port_result.rc == 0

- name: server | docker | stop previous devpi container
  shell: docker {{ item }} {{ cat_result.stdout.strip() }}
  with_items: [stop, rm]
  when: devpi_port == '' and docker_inspect_result is defined and docker_inspect_result.rc == 0

- name: server | docker | wait for server to come up
  wait_for: host=0.0.0.0 port={{ devpi_port }}
