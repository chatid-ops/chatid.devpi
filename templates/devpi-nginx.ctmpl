{% if devpi_proxy_consul_aware | bool %}
{% raw %}
upstream devpi {
    {{ range service "master.{% endraw %}{{ devpi_service_name }}{% raw %}" }}server {{ .Address }}:{{ .Port }};
    {{end}}
}
{% endraw %}
{% else %}
upstream devpi {
    server 127.0.0.1:{{ devpi_port }};
}
{% endif %}

{% if devpi_proxy_ssl %}
server {
    listen       {{ devpi_proxy_port }};
    server_name  {{ devpi_proxy_host }};
    rewrite      ^ https://$server_name$request_uri? permanent;
}
{% endif %}

server {
    server_name      {{ devpi_proxy_host }};
    listen           {{ devpi_proxy_port if not devpi_proxy_ssl else devpi_proxy_ssl_port }};
    gzip             on;
    gzip_min_length  2000;
    gzip_proxied     any;

{% if devpi_proxy_ssl %}
    ssl                  on;
    ssl_certificate      {{ devpi_proxy_ssl_cert_path }};
    ssl_certificate_key  {{ devpi_proxy_ssl_key_path }};
    ssl_session_cache    shared:SSL:10m;
    ssl_session_timeout  10m;

    # https://wiki.mozilla.org/Security/Server_Side_TLS#Nginx
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128:AES256:AES:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK';
    ssl_prefer_server_ciphers on;
{% endif %}

    proxy_read_timeout 60s;
    client_max_body_size 64M;

    error_log {{ devpi_proxy_error_log }} error;
    access_log {{ devpi_proxy_access_log }};

    # set to where your devpi-server state is on the filesystem
    root {{ devpi_server_dir }};

    # try serving static files directly
    location ~ /\+f/ {
        error_page 418 = @proxy_to_app;
        if ($request_method != GET) {
            return 418;
        }
        try_files /+files$uri @proxy_to_app;
    }
    # try serving docs directly
    location ~ /\+doc/ {
        try_files $uri @proxy_to_app;
    }
    location / {
        error_page 418 = @proxy_to_app;
        return 418;
    }
    location @proxy_to_app {
        proxy_pass        http://devpi;
        proxy_set_header  X-outside-url $scheme://$host:$server_port;
        proxy_set_header  X-Real-IP $remote_addr;
    }
}
